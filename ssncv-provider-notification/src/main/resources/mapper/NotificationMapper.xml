<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zaq.ssncv.ssncvprovidernotification.mapper.NotificationMapper">
    <resultMap id="BaseResultMap" type="Notification">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_id" property="updateId" jdbcType="BIGINT"/>
        <result column="order_no" property="orderNo" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, title, content, create_time, create_id, update_time, update_id, order_no
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from notification
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from notification
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="Notification">
        insert into notification (id, title, content,
                                  create_time, create_id, update_time,
                                  update_id, order_no)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
                #{updateId,jdbcType=BIGINT}, #{orderNo,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="Notification">
        insert into notification
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Notification">
        update notification
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="Notification">
        update notification
        set title       = #{title,jdbcType=VARCHAR},
            content     = #{content,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            create_id   = #{createId,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            update_id   = #{updateId,jdbcType=BIGINT},
            order_no    = #{orderNo,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--自定义sql-->
    <select id="list" resultMap="BaseResultMap" parameterType="PageBean">
        select
        *
        from
        notification
        where
        1 =1
        <if test="parameter.title != null and parameter.title != '' ">
            and notification.title like concat('%' #{parameter.title,jdbcType=VARCHAR},'%')
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>
    <select id="selectLatest" resultMap="BaseResultMap">
        select *
        from notification
        order by id asc
        LIMIT 1
    </select>
</mapper>